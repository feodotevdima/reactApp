{"ast":null,"code":"import { getToken } from \"../../../shared/TokenProvider.ts\";\nasync function ChangeWish(id, present, price) {\n  const Url = \"https://localhost:7003/Wish/update/wish\";\n  const token = await getToken();\n  let response = await fetch(Url, {\n    method: \"PUT\",\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': \"Bearer \" + token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"present\": present,\n      \"price\": price\n    })\n  });\n  return response.status;\n}\n_c = ChangeWish;\nexport default ChangeWish;\nvar _c;\n$RefreshReg$(_c, \"ChangeWish\");","map":{"version":3,"names":["getToken","ChangeWish","id","present","price","Url","token","response","fetch","method","headers","body","JSON","stringify","status","_c","$RefreshReg$"],"sources":["C:/Users/Дима/OneDrive/Документы/react/reactApp/src/pajes/ChangePaje/API/ChangeWish.ts"],"sourcesContent":["import { getToken } from \"../../../shared/TokenProvider.ts\";\r\n\r\n\r\nasync function ChangeWish(id, present, price)\r\n{\r\n  const Url=\"https://localhost:7003/Wish/update/wish\";\r\n  const token= await getToken();\r\n  let response = await fetch(Url,\r\n  {\r\n    method: \"PUT\",\r\n    headers:     \r\n    {\r\n      'Accept': 'application/json',\r\n      'Authorization': \"Bearer \" + token,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n        \"present\": present,\r\n        \"price\": price,\r\n\r\n      })\r\n  });\r\n  return response.status\r\n}\r\n\r\nexport default ChangeWish"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kCAAkC;AAG3D,eAAeC,UAAUA,CAACC,EAAE,EAAEC,OAAO,EAAEC,KAAK,EAC5C;EACE,MAAMC,GAAG,GAAC,yCAAyC;EACnD,MAAMC,KAAK,GAAE,MAAMN,QAAQ,CAAC,CAAC;EAC7B,IAAIO,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAC9B;IACEI,MAAM,EAAE,KAAK;IACbC,OAAO,EACP;MACE,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,SAAS,GAAGJ,KAAK;MAClC,cAAc,EAAE;IAClB,CAAC;IACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,SAAS,EAAEV,OAAO;MAClB,OAAO,EAAEC;IAEX,CAAC;EACL,CAAC,CAAC;EACF,OAAOG,QAAQ,CAACO,MAAM;AACxB;AAACC,EAAA,GApBcd,UAAU;AAsBzB,eAAeA,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}