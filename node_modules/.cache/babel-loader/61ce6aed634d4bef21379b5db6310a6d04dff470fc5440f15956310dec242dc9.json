{"ast":null,"code":"import { getToken } from \"../../../shared/TokenProvider.ts\";\nasync function DelReserv(id) {\n  console.log(id);\n  const Url = \"https://localhost:7003/Wish/reserv/del/\" + id;\n  const token = await getToken();\n  let response = await fetch(Url, {\n    method: \"PUT\",\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': \"Bearer \" + token,\n      'Content-Type': 'application/json'\n    }\n  });\n  const j = await response.json();\n  window.location.reload();\n  return j;\n}\n_c = DelReserv;\nexport default DelReserv;\nvar _c;\n$RefreshReg$(_c, \"DelReserv\");","map":{"version":3,"names":["getToken","DelReserv","id","console","log","Url","token","response","fetch","method","headers","j","json","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/Дима/OneDrive/Документы/react/reactApp/src/pajes/ReservPaje/API/DelReserv.ts"],"sourcesContent":["import { getToken } from \"../../../shared/TokenProvider.ts\";\r\n\r\n\r\nasync function DelReserv(id)\r\n{\r\n    console.log(id)\r\n  const Url=\"https://localhost:7003/Wish/reserv/del/\"+id;\r\n  const token= await getToken();\r\n  let response = await fetch(Url,\r\n  {\r\n    method: \"PUT\",\r\n    headers:     \r\n    {\r\n      'Accept': 'application/json',\r\n      'Authorization': \"Bearer \" + token,\r\n      'Content-Type': 'application/json'\r\n    },\r\n  });\r\n  const j = await response.json();\r\n  window.location.reload();\r\n  return j;\r\n}\r\n\r\nexport default DelReserv"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kCAAkC;AAG3D,eAAeC,SAASA,CAACC,EAAE,EAC3B;EACIC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EACjB,MAAMG,GAAG,GAAC,yCAAyC,GAACH,EAAE;EACtD,MAAMI,KAAK,GAAE,MAAMN,QAAQ,CAAC,CAAC;EAC7B,IAAIO,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAC9B;IACEI,MAAM,EAAE,KAAK;IACbC,OAAO,EACP;MACE,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,SAAS,GAAGJ,KAAK;MAClC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,MAAMK,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC/BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EACxB,OAAOJ,CAAC;AACV;AAACK,EAAA,GAlBcf,SAAS;AAoBxB,eAAeA,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}